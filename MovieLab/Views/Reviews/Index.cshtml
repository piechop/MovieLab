@model IEnumerable<MovieLab.Models.ReviewViewModel>
@using Microsoft.AspNet.Identity;
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Movie Review List";
    var pagedList = (IPagedList)Model;
}

<h2>Movie Review List</h2>
Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page, filter = ViewBag.CurrentFilter, search = ViewBag.CurrentSearch }))

@using (Html.BeginForm(new { page = 1 }))
{
    <div id="FilterSearch" class="form-horizontal">

        <div class="form-group">
            @Html.Label("Search by Author", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBox("search", null, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.Label("Filter by Movie", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("filter", new SelectList(ViewBag.SelectMovieList),"All Movies", new { @class = "form-control" })
        </div>

        <div class="form-group">
            <input type="submit" value="Find Reviews" class="btn col-md-2 col-md-offset-2" />
            <input type="button" value="Reset Review List" onclick="location.href='@Url.Action("Index","Reviews")'" class="btn col-md-2 col-md-offset-2" />
        </div>

    </div>
}
@if (User.IsInRole("Movie Admin") || User.IsInRole("Site Admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ReviewTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MovieTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReviewRating)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ReviewTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MovieTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReviewRating)
            </td>

            <td>
                @if (User.IsInRole("Movie Admin") || User.IsInRole("Site Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                    <span> |</span>
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    <span> |</span>
                }
                @Html.ActionLink("Details", "Details", new { id = item.ID })
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("Return", "Admin", "Home")
</div>
