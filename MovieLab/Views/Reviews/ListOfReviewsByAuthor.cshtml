@model IEnumerable<MovieLab.Models.ReviewViewModel>
@using Microsoft.AspNet.Identity;
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "User Reviews";
    var pagedList = (IPagedList)Model;
}

<h2>Movie Reviews by @ViewBag.User</h2>
<span class="text-danger">@ViewBag.Error</span>
Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, yearFilter = ViewBag.CurrentFilter, searchCriteria = ViewBag.CurrentCriteria }))

@*@using (Html.BeginForm())
{
    <div id="FilterSearch" class="form-horizontal">

        <div class="form-group">
            @Html.Label("Search by Title", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBox("searchCriteria", null, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.Label("Filter by Year Released", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("yearFilter",
                                                 new SelectList(ViewBag.Years),
                                                 "All Years",
                                                 new { @class = "form-control" })
        </div>

        <div class="form-group">
            <input type="submit" value="Find Movies" class="btn col-md-2 col-md-offset-2" />
            <input type="button" value="Reset Movie List" onclick="location.href='@Url.Action("Index","Movies")'" class="btn col-md-2 col-md-offset-2" />
        </div>

    </div>
}*@
<table class="table">

    @foreach (var r in Model)
    {
        <tr>
            <td>
                Review for @Html.DisplayFor(modelItem => r.MovieTitle) <br />
                @Html.DisplayFor(modelItem => r.ReviewTitle) <br />
                @Html.DisplayFor(modelItem => r.MovieRating) / 100<br />
                @Html.DisplayFor(modelItem => r.ReviewText) <br />
                @Html.DisplayFor(modelItem => r.ReviewTime) <br />
            </td>
            <td>
                @if (User.IsInRole("Movie Admin") || User.IsInRole("Site Admin") || User.Identity.GetUserName() == r.Author)
                {
                    @Html.ActionLink("Edit", "UserEdit", new { id = r.ID, redirect = "ListOfReviewsByAuthor" })
                    <span> |</span>
                    @Html.ActionLink("Delete", "Delete", new { id = r.ID, redirect = "ListOfReviewsByAuthor" })
                    <span> |</span>
                }
                @Html.ActionLink("Details", "Details", new { id = r.ID, redirect = "ListOfReviewsByAuthor" })
            </td>
        </tr>
    }

</table>

@Html.ActionLink("Return to Account", "Index", "Manage")

